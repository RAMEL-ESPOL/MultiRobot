FROM  ros:eloquent-ros-core-bionic

# # nvidia-container-runtime


# RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
#     && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \
#     && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
# ENV LANG en_US.utf8

# ENV NVIDIA_VISIBLE_DEVICES \
#     ${NVIDIA_VISIBLE_DEVICES:-all}
# ENV NVIDIA_DRIVER_CAPABILITIES \
#     ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

RUN apt-get update && \
      apt-get -y install sudo

# RUN echo 'Etc/UTC' > /etc/timezone && \
#     ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
#     apt-get update && apt-get install -q -y tzdata && rm -rf /var/lib/apt/lists/*


# # install packages
RUN apt-get update && apt-get install -q -y \
    bash-completion \
    dirmngr \
    gnupg2 \
    lsb-release \
    python3-pip \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# # setup ros2 keys
# #RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# # setup sources.list
# #RUN echo "deb http://packages.ros.org/ros2/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros2-latest.list
RUN apt update &&  apt install -y curl gnupg2 lsb-release
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc |  apt-key add -

RUN echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list


# # setup environment
# ENV LANG C.UTF-8
# ENV LC_ALL C.UTF-8

# # install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
  build-essential \
  cmake \
    git \
     python3-pip \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# # install python packages
RUN pip3 install -U \
    importlib_metadata

# RUN pip3 install -U \
#     argcomplete \
#     flake8 \
#     flake8-blind-except \
#     flake8-builtins \
#     flake8-class-newline \
#     flake8-comprehensions \
#     flake8-deprecated \
#     flake8-docstrings \
#     flake8-import-order \
#     flake8-quotes \
#     pytest-repeat \
#     pytest-rerunfailures \
#       pytest \
#   pytest-cov \
#   pytest-runner \
#   setuptools

# RUN apt-get update && apt install --no-install-recommends -y \
#   libasio-dev \
#   libtinyxml2-dev
# # install Cyclone DDS dependencies
# RUN apt-get update && apt install --no-install-recommends -y \
#   libcunit1-dev
# # This is a workaround for pytest not found causing builds to fail
# # Following RUN statements tests for regression of https://github.com/ros2/ros2/issues/722
# RUN pip3 freeze | grep pytest \
#     && python3 -m pytest --version

# RUN apt-get update && apt-get install -q -y \
#     libboost-dev \
#     libboost-thread-dev \
#     libboost-date-time-dev \
#     libboost-atomic-dev \
#     libboost-chrono-dev \
#     libboost-system-dev \
#     libboost-regex-dev \
#     && rm -rf /var/lib/apt/lists/*

# RUN  apt-get update && apt install -y libboost-python-dev
# RUN cd /usr/lib/x86_64-linux-gnu/ &&  ln -s libboost_python-py35.so 
# #libboost_python3.so
# RUN apt-get update && apt install -y ros-eloquent-ros-base
# RUN mkdir -p ~/ros2_eloquent/src && \
#     cd ~/ros2_eloquent && \ 
#     wget https://raw.githubusercontent.com/ros2/ros2/eloquent/ros2.repos && \
#     vcs import src < ros2.repos 
# RUN cd ~/ros2_eloquent/src/ament/ament_lint && git checkout master
RUN apt-get update && apt-get install -q -y \
    bash coreutils tar curl git lcov python3-colcon-lcov-result \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p ~/ros2_eloquent/src && \
    cd ~/ros2_eloquent/src && \ 
    git clone -b eloquent https://github.com/ament/ament_lint.git

RUN env
RUN /bin/bash -c "source  /opt/ros/eloquent/setup.bash && cd ~/ros2_eloquent && \  
    rosdep init && \ 
    rosdep update --include-eol-distros && apt update && \
    rosdep install --from-paths src --ignore-src --rosdistro eloquent -y "

RUN cd ~/ros2_eloquent/src/ament_lint && \
    git checkout master


RUN git clone --quiet --depth 1 https://github.com/ros-industrial/industrial_ci .industrial_ci -b master

RUN /bin/bash -c "source  /opt/ros/eloquent/setup.bash && \
    cd ~/ros2_eloquent && \
    colcon build --symlink-install"

#dependency fot aruco_ros2
RUN apt-get update && apt-get install -q -y \
    ros-eloquent-image-transport \
    ros-eloquent-cv-bridge \
    && rm -rf /var/lib/apt/lists/*



RUN echo "\n# to make ROS work\nsource /opt/ros/eloquent/setup.bash" >> ~/.bashrc
RUN echo "\nsource  ~/ros2_eloquent/install/setup.bash" >> ~/.bashrc

CMD ["bash"]
SHELL ["/bin/bash", "-c"]
CMD /bin/bash -c "source ~/.bashrc"