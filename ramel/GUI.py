# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt6 UI code generator 6.5.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6.QtWidgets import QApplication, QMainWindow
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QImage, QPixmap, QColor
import subprocess
import threading
import os
import signal
import rclpy
import numpy as np
from rclpy.node import Node
from std_msgs.msg import String
from aruco_msgs.msg import Poses
from sensor_msgs.msg import Image

class GUI(Node):
    def __init__(self):
        super().__init__('GUI')
        self.workspaces = set()
        self.robots = set()

        self.subscription = self.create_subscription(
            Poses,
            'aruco_poses',
            self.on_aruco_poses_received,
            10)
        self.subscription  # prevent unused variable warning
        
        self.img_subscriber = self.create_subscription(Image, "c1/result", self.image_callback,10)
        
    def image_callback(self, msg):
        # Convert image data to QImage and display it
        print("entering")
        img_data = np.array(msg.data, dtype=np.uint8).reshape((msg.height, msg.width, -1))
        q_image = QImage(img_data.data, msg.width, msg.height, QImage.Format.Format_RGB888)

        # Display the QImage in the QLabel
        pixmap = QPixmap.fromImage(q_image)
        # Call the method in the UI class to update the image_label
        ui.update_image_label(pixmap)

    def on_aruco_poses_received(self, msg):
        # Extract marker_ids list from the received message
        self.marker_ids = msg.marker_ids
        
        # Categorize markers into workspaces and robots based on ID
        workspaces = set()
        robots = set()
        for marker_id in self.marker_ids:
            if marker_id < 10:
                workspaces.add(marker_id)
            else:
                robots.add(marker_id)
                
        # Rearrange workspaces and robots in numerical order
        workspaces = sorted(workspaces)
        robots = sorted(robots)

        # Check if the workspaces and robots list have changed
        if workspaces != self.workspaces or robots != self.robots:
            # Update the combo boxes only if the lists have changed
            self.workspaces = workspaces
            self.robots = robots
            ui.update_combo_boxes()
            
class Ui_MainWindow(object):
    def setupUi(self, MainWindow, gui):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(572, 901)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet("/*Copyright (c) DevSec Studio. All rights reserved.\n"
"\n"
"MIT License\n"
"\n"
"Permission is hereby granted, free of charge, to any person obtaining a copy\n"
"of this software and associated documentation files (the \"Software\"), to deal\n"
"in the Software without restriction, including without limitation the rights\n"
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n"
"copies of the Software, and to permit persons to whom the Software is\n"
"furnished to do so, subject to the following conditions:\n"
"\n"
"The above copyright notice and this permission notice shall be included in all\n"
"copies or substantial portions of the Software.\n"
"\n"
"THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n"
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n"
"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n"
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n"
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n"
"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n"
"SOFTWARE.\n"
"*/\n"
"\n"
"/*-----QWidget-----*/\n"
"QWidget\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(102, 115, 140, 255),stop:1 rgba(56, 63, 77, 255));\n"
"    color: #ffffff;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QLabel-----*/\n"
"QLabel\n"
"{\n"
"    background-color: transparent;\n"
"    color: #ffffff;\n"
"    font-weight: bold;\n"
"\n"
"}\n"
"\n"
"\n"
"QLabel::disabled\n"
"{\n"
"    background-color: transparent;\n"
"    color: #898988;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QMenuBar-----*/\n"
"QMenuBar\n"
"{\n"
"    background-color: #484c58;\n"
"    color: #ffffff;\n"
"    border-color: #051a39;\n"
"    font-weight: bold;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #898988;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item\n"
"{\n"
"    background-color: transparent;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item:selected\n"
"{\n"
"    background-color: #c4c5c3;\n"
"    color: #000000;\n"
"    border: 1px solid #000000;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenuBar::item:pressed\n"
"{\n"
"    background-color: #979796;\n"
"    border: 1px solid #000;\n"
"    margin-bottom: -1px;\n"
"    padding-bottom: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QMenu-----*/\n"
"QMenu\n"
"{\n"
"    background-color: #c4c5c3;\n"
"    border: 1px solid;\n"
"    color: #000000;\n"
"    font-weight: bold;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::separator\n"
"{\n"
"    height: 1px;\n"
"    background-color: #363942;\n"
"    color: #ffffff;\n"
"    padding-left: 4px;\n"
"    margin-left: 10px;\n"
"    margin-right: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item\n"
"{\n"
"    min-width : 150px;\n"
"    padding: 3px 20px 3px 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item:selected\n"
"{\n"
"    background-color: #363942;\n"
"    color: #ffffff;\n"
"\n"
"}\n"
"\n"
"\n"
"QMenu::item:disabled\n"
"{\n"
"    color: #898988;\n"
"}\n"
"\n"
"\n"
"/*-----QToolTip-----*/\n"
"QToolTip\n"
"{\n"
"    background-color: #bbbcba;\n"
"    color: #000000;\n"
"    border-color: #051a39;\n"
"    border : 1px solid #000000;\n"
"    border-radius: 2px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QPushButton-----*/\n"
"QPushButton\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:0.486, y1:0, x2:0.505, y2:1, stop:0.00480769 rgba(20, 56, 55, 255),stop:1 rgba(36, 92, 90, 255));\n"
"    color: #ffffff;\n"
"    font-weight: bold;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 3px;\n"
"    border-color: #051a39;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::hover\n"
"{\n"
"    background-color: #014a17;\n"
"    color: #ffffff;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 3px;\n"
"    border-color: #051a39;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QPushButton::pressed\n"
"{\n"
"    background-color: #014a17;\n"
"    color: #ffffff;\n"
"    border-style: solid;\n"
"    border-width: 2px;\n"
"    border-radius: 3px;\n"
"    border-color: #000000;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QToolButton-----*/\n"
"QToolButton \n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(177, 181, 193, 255),stop:1 rgba(159, 163, 174, 255));\n"
"    color: #ffffff;\n"
"    font-weight: bold;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 3px;\n"
"    border-color: #051a39;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolButton::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolButton::hover\n"
"{\n"
"    background-color: #9fa3ae;\n"
"    color: #ffffff;\n"
"    border-style: solid;\n"
"    border-width: 1px;\n"
"    border-radius: 3px;\n"
"    border-color: #051a39;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QToolButton::pressed\n"
"{\n"
"    background-color: #7b7e86;\n"
"    color: #ffffff;\n"
"    border-style: solid;\n"
"    border-width: 2px;\n"
"    border-radius: 3px;\n"
"    border-color: #000000;\n"
"    padding: 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QComboBox-----*/\n"
"QComboBox\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(118, 118, 118, 255),stop:1 rgba(70, 70, 70, 255));\n"
"    border: 1px solid #333333;\n"
"    border-radius: 3px;\n"
"    padding-left: 6px;\n"
"    color: lightgray;\n"
"    font-weight: bold;\n"
"    height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox:hover\n"
"{\n"
"    background-color: #646464;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox:on\n"
"{\n"
"    background-color: #979796;\n"
"    color: #000000;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView\n"
"{\n"
"    background-color: #c4c5c3;\n"
"    color: #000000;\n"
"    border: 1px solid black;\n"
"    selection-background-color: #363942;\n"
"    selection-color: #ffffff;\n"
"    outline: 0;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down\n"
"{\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px;\n"
"    border-left-width: 1px;\n"
"    border-left-color: darkgray;\n"
"    border-left-style: solid; \n"
"    border-top-right-radius: 3px; \n"
"    border-bottom-right-radius: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox::down-arrow\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 8px;\n"
"    height: 8px;\n"
"}\n"
"\n"
"\n"
"/*-----QSpinBox & QDoubleSpinBox & QDateTimeEdit-----*/\n"
"QSpinBox, \n"
"QDoubleSpinBox,\n"
"QDateTimeEdit\n"
"{\n"
"    background-color: #000000;\n"
"    color: #00ff00;\n"
"    font-weight: bold;\n"
"    border: 1px solid #333333;\n"
"    padding : 4px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::disabled, \n"
"QDoubleSpinBox::disabled,\n"
"QDateTimeEdit::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox:hover, \n"
"QDoubleSpinBox::hover,\n"
"QDateTimeEdit::hover\n"
"{\n"
"    border: 1px solid #00ff00;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button, QSpinBox::down-button,\n"
"QDoubleSpinBox::up-button, QDoubleSpinBox::down-button,\n"
"QDateTimeEdit::up-button, QDateTimeEdit::down-button\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(118, 118, 118, 255),stop:1 rgba(70, 70, 70, 255));\n"
"    border: 0px solid #333333;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::disabled, \n"
"QDoubleSpinBox::disabled,\n"
"QDateTimeEdit::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:hover, QSpinBox::down-button:hover,\n"
"QDoubleSpinBox::up-button:hover, QDoubleSpinBox::down-button:hover,\n"
"QDateTimeEdit::up-button:hover, QDateTimeEdit::down-button:hover\n"
"{\n"
"    background-color: #646464;\n"
"    border: 1px solid #333333;\n"
"\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:disabled, QSpinBox::down-button:disabled,\n"
"QDoubleSpinBox::up-button:disabled, QDoubleSpinBox::down-button:disabled,\n"
"QDateTimeEdit::up-button:disabled, QDateTimeEdit::down-button:disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-button:pressed, QSpinBox::down-button:pressed,\n"
"QDoubleSpinBox::up-button:pressed, QDoubleSpinBox::down-button::pressed,\n"
"QDateTimeEdit::up-button:pressed, QDateTimeEdit::down-button::pressed\n"
"{\n"
"    background-color: #979796;\n"
"    border: 1px solid #444444;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-arrow,\n"
"QDoubleSpinBox::down-arrow,\n"
"QDateTimeEdit::down-arrow\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 7px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSpinBox::up-arrow,\n"
"QDoubleSpinBox::up-arrow,\n"
"QDateTimeEdit::up-arrow\n"
"{\n"
"    image: url(://arrow-up.png);\n"
"    width: 7px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QLineEdit-----*/\n"
"QLineEdit\n"
"{\n"
"    background-color: #000000;\n"
"    color: #00ff00;\n"
"    font-weight: bold;\n"
"    border: 1px solid #333333;\n"
"    padding: 4px;\n"
"\n"
"}\n"
"\n"
"\n"
"QLineEdit:hover\n"
"{\n"
"    border: 1px solid #00ff00;\n"
"\n"
"}\n"
"\n"
"\n"
"QLineEdit::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-width: 1px;\n"
"    border-color: #051a39;\n"
"    padding: 2px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QTextEdit-----*/\n"
"QTextEdit\n"
"{\n"
"    background-color: #808080;\n"
"    color: #fff;\n"
"    border: 1px groove #333333;\n"
"\n"
"}\n"
"\n"
"\n"
"QTextEdit::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QGroupBox-----*/\n"
"QGroupBox \n"
"{\n"
"    border: 1px groove #333333;\n"
"    border-radius: 2px;\n"
"    margin-top: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QGroupBox \n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:0.486, y1:0, x2:0.505, y2:1, stop:0.00480769 rgba(170, 169, 169, 255),stop:1 rgba(122, 122, 122, 255));\n"
"    font-weight: bold;\n"
"\n"
"}\n"
"\n"
"\n"
"QGroupBox::title  \n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(71, 75, 87, 255),stop:1 rgba(35, 37, 43, 255));\n"
"    color: #ffffff;\n"
"    border: 2px groove #333333;\n"
"    subcontrol-origin: margin;\n"
"    subcontrol-position: top left;\n"
"    padding: 2px;\n"
"\n"
"}\n"
"\n"
"\n"
"QGroupBox::title::disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    subcontrol-origin: margin;\n"
"    subcontrol-position: top left;\n"
"    padding: 5px;\n"
"    border-top-left-radius: 3px;\n"
"    border-top-right-radius: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QCheckBox-----*/\n"
"QCheckBox{\n"
"    background-color: transparent;\n"
"    font-weight: bold;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator\n"
"{\n"
"    color: #b1b1b1;\n"
"    background-color: #323232;\n"
"    border: 2px solid #222222;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:checked\n"
"{\n"
"    image:url(://checkbox.png);\n"
"    border: 2px solid #00ff00;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:unchecked:hover\n"
"{\n"
"    border: 2px solid #00ff00;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::disabled\n"
"{\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QCheckBox::indicator:disabled\n"
"{\n"
"    background-color: #656565;\n"
"    color: #656565;\n"
"    border: 1px solid #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QRadioButton-----*/\n"
"QRadioButton{\n"
"    background-color: transparent;\n"
"    font-weight: bold;\n"
"    color: #fff;\n"
"\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator::unchecked\n"
"{ \n"
"    border: 2px inset #222222; \n"
"    border-radius: 6px; \n"
"    background-color:  #323232;\n"
"    width: 9px; \n"
"    height: 9px; \n"
"\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator::unchecked:hover\n"
"{ \n"
"    border: 2px solid #00ff00; \n"
"    border-radius: 5px; \n"
"    background-color:  #323232;\n"
"    width: 9px; \n"
"    height: 9px; \n"
"\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator::checked\n"
"{ \n"
"    border: 2px inset #222222; \n"
"    border-radius: 5px; \n"
"    background-color: #00ff00; \n"
"    width: 9px; \n"
"    height: 9px; \n"
"\n"
"}\n"
"\n"
"\n"
"QRadioButton::disabled\n"
"{\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QRadioButton::indicator:disabled\n"
"{\n"
"    background-color: #656565;\n"
"    color: #656565;\n"
"    border: 2px solid #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QTableView & QTableWidget-----*/\n"
"QTableView\n"
"{\n"
"    background-color: #808080;\n"
"    border: 1px groove #333333;\n"
"    color: #f0f0f0;\n"
"    font-weight: bold;\n"
"    gridline-color: #333333;\n"
"    outline : 0;\n"
"\n"
"}\n"
"\n"
"\n"
"QTableView::disabled\n"
"{\n"
"    background-color: #242526;\n"
"    border: 1px solid #32414B;\n"
"    color: #656565;\n"
"    gridline-color: #656565;\n"
"    outline : 0;\n"
"\n"
"}\n"
"\n"
"\n"
"QTableView::item:hover \n"
"{\n"
"    background-color: #484c58;\n"
"    color: #f0f0f0;\n"
"\n"
"}\n"
"\n"
"\n"
"QTableView::item:selected \n"
"{\n"
"    background-color: #484c58;\n"
"    border: 2px groove #00ff00;\n"
"    color: #F0F0F0;\n"
"\n"
"}\n"
"\n"
"\n"
"QTableView::item:selected:disabled\n"
"{\n"
"    background-color: #1a1b1c;\n"
"    border: 2px solid #525251;\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QTableCornerButton::section\n"
"{\n"
"    background-color: #282830;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section\n"
"{\n"
"    background-color: #282830;\n"
"    color: #fff;\n"
"    font-weight: bold;\n"
"    text-align: left;\n"
"    padding: 4px;\n"
"    \n"
"}\n"
"\n"
"\n"
"QHeaderView::section:disabled\n"
"{\n"
"    background-color: #525251;\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section:checked\n"
"{\n"
"    background-color: #00ff00;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section:checked:disabled\n"
"{\n"
"    color: #656565;\n"
"    background-color: #525251;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::vertical::first,\n"
"QHeaderView::section::vertical::only-one\n"
"{\n"
"    border-top: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::vertical\n"
"{\n"
"    border-top: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::horizontal::first,\n"
"QHeaderView::section::horizontal::only-one\n"
"{\n"
"    border-left: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QHeaderView::section::horizontal\n"
"{\n"
"    border-left: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QTabWidget-----*/\n"
"QTabBar::tab\n"
"{\n"
"    background-color: transparent;\n"
"    color: #ffffff;\n"
"    font-weight: bold;\n"
"    width: 90px;\n"
"    height: 19px;\n"
"    \n"
"}\n"
"\n"
"\n"
"QTabBar::tab:disabled\n"
"{\n"
"    background-color: #656565;\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabWidget::pane \n"
"{\n"
"    background-color: transparent;\n"
"    color: #ffffff;\n"
"    border: 1px groove #333333;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:selected\n"
"{\n"
"    background-color: #484c58;\n"
"    color: #ffffff;\n"
"    border: 1px groove #333333;\n"
"    border-bottom: 0px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:selected:disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:!selected \n"
"{\n"
"    background-color: #a3a7b2;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:!selected:hover \n"
"{\n"
"    background-color: #484c58;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:top:!selected \n"
"{\n"
"    margin-top: 1px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:bottom:!selected \n"
"{\n"
"    margin-bottom: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:top, QTabBar::tab:bottom \n"
"{\n"
"    min-width: 8ex;\n"
"    margin-right: -1px;\n"
"    padding: 5px 10px 5px 10px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:top:selected \n"
"{\n"
"    border-bottom-color: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:bottom:selected \n"
"{\n"
"    border-top-color: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:top:last, QTabBar::tab:bottom:last,\n"
"QTabBar::tab:top:only-one, QTabBar::tab:bottom:only-one \n"
"{\n"
"    margin-right: 0;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:left:!selected \n"
"{\n"
"    margin-right: 2px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:right:!selected\n"
"{\n"
"    margin-left: 2px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:left, QTabBar::tab:right \n"
"{\n"
"    min-height: 15ex;\n"
"    margin-bottom: -1px;\n"
"    padding: 10px 5px 10px 5px;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:left:selected \n"
"{\n"
"    border-left-color: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:right:selected \n"
"{\n"
"    border-right-color: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:left:last, QTabBar::tab:right:last,\n"
"QTabBar::tab:left:only-one, QTabBar::tab:right:only-one \n"
"{\n"
"    margin-bottom: 0;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QSlider-----*/\n"
"QSlider{\n"
"    background-color: transparent;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::groove:horizontal \n"
"{\n"
"    background-color: transparent;\n"
"    height: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:horizontal \n"
"{\n"
"    background-color: qlineargradient(spread:reflect, x1:1, y1:0, x2:1, y2:1, stop:0.00480769 rgba(201, 201, 201, 255),stop:1 rgba(72, 72, 72, 255));\n"
"    border: 1px solid #000;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:horizontal \n"
"{\n"
"    background-color: #404040;\n"
"    border: 1px solid #000; \n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal \n"
"{\n"
"    background-color: qlineargradient(spread:reflect, x1:1, y1:0, x2:1, y2:1, stop:0.00480769 rgba(201, 201, 201, 255),stop:1 rgba(72, 72, 72, 255));\n"
"    border: 1px solid #000; \n"
"    width: 12px;\n"
"    margin-top: -6px;\n"
"    margin-bottom: -6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal:hover \n"
"{\n"
"    background-color: #808080;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:horizontal:disabled \n"
"{\n"
"    background-color: #bbb;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:horizontal:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:horizontal:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border: 1px solid #aaa;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::groove:vertical \n"
"{\n"
"    background-color: transparent;\n"
"    width: 6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:vertical \n"
"{\n"
"    background-color: qlineargradient(spread:reflect, x1:0, y1:0.483, x2:1, y2:0.517, stop:0.00480769 rgba(201, 201, 201, 255),stop:1 rgba(72, 72, 72, 255));\n"
"    border: 1px solid #000;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:vertical \n"
"{\n"
"    background-color: #404040;\n"
"    border: 1px solid #000;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:vertical \n"
"{\n"
"    background-color: qlineargradient(spread:reflect, x1:0, y1:0.483, x2:1, y2:0.517, stop:0.00480769 rgba(201, 201, 201, 255),stop:1 rgba(72, 72, 72, 255));\n"
"    border: 1px solid #000;\n"
"    height: 12px;\n"
"    margin-left: -6px;\n"
"    margin-right: -6px;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:vertical:hover \n"
"{\n"
"    background-color: #808080;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::sub-page:vertical:disabled \n"
"{\n"
"    background-color: #bbb;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::add-page:vertical:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border-color: #999;\n"
"\n"
"}\n"
"\n"
"\n"
"QSlider::handle:vertical:disabled \n"
"{\n"
"    background-color: #eee;\n"
"    border: 1px solid #aaa;\n"
"    border-radius: 3px;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QDial-----*/\n"
"QDial\n"
"{\n"
"    background-color: #600000;\n"
"\n"
"}\n"
"\n"
"\n"
"QDial::disabled\n"
"{\n"
"    background-color: #404040;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QScrollBar-----*/\n"
"QScrollBar:horizontal\n"
"{\n"
"    border: 1px solid #222222;\n"
"    background-color: #63676d;\n"
"    height: 18px;\n"
"    margin: 0px 18px 0 18px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::handle:horizontal\n"
"{\n"
"    background-color: #a6acb3;\n"
"    border: 1px solid #656565;\n"
"    border-radius: 2px;\n"
"    min-height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:horizontal\n"
"{\n"
"    border: 1px solid #1b1b19;\n"
"    background-color: #a6acb3;\n"
"    width: 18px;\n"
"    subcontrol-position: right;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:horizontal\n"
"{\n"
"    border: 1px solid #1b1b19;\n"
"    background-color: #a6acb3;\n"
"    width: 18px;\n"
"    subcontrol-position: left;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::right-arrow:horizontal\n"
"{\n"
"    image: url(://arrow-right.png);\n"
"    width: 8px;\n"
"    height: 8px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::left-arrow:horizontal\n"
"{\n"
"    image: url(://arrow-left.png);\n"
"    width: 8px;\n"
"    height: 8px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal\n"
"{\n"
"    background: none;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar:vertical\n"
"{\n"
"    background-color: #63676d;\n"
"    width: 18px;\n"
"    margin: 18px 0 18px 0;\n"
"    border: 1px solid #222222;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::handle:vertical\n"
"{\n"
"    background-color: #a6acb3;\n"
"    border: 1px solid #656565;\n"
"    border-radius: 2px;\n"
"    min-height: 20px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical\n"
"{\n"
"    border: 1px solid #1b1b19;\n"
"    background-color: #a6acb3;\n"
"    height: 18px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::sub-line:vertical\n"
"{\n"
"    border: 1px solid #1b1b19;\n"
"    background-color: #a6acb3;\n"
"    height: 18px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::up-arrow:vertical\n"
"{\n"
"    image: url(://arrow-up.png);\n"
"    width: 8px;\n"
"    height: 8px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::down-arrow:vertical\n"
"{\n"
"    image: url(://arrow-down.png);\n"
"    width: 8px;\n"
"    height: 8px;\n"
"\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical\n"
"{\n"
"    background: none;\n"
"\n"
"}\n"
"\n"
"\n"
"/*-----QProgressBar-----*/\n"
"QProgressBar\n"
"{\n"
"    background-color: #000;\n"
"    color: #00ff00;\n"
"    font-weight: bold;\n"
"    border: 0px groove #000;\n"
"    border-radius: 10px;\n"
"    text-align: center;\n"
"\n"
"}\n"
"\n"
"\n"
"QProgressBar:disabled\n"
"{\n"
"    background-color: #404040;\n"
"    color: #656565;\n"
"    border-color: #051a39;\n"
"    border: 1px solid #000;\n"
"    border-radius: 10px;\n"
"    text-align: center;\n"
"\n"
"}\n"
"\n"
"\n"
"QProgressBar::chunk {\n"
"    background-color: #ffaf02;\n"
"    border: 0px;\n"
"    border-radius: 10px;\n"
"    color: #000;\n"
"\n"
"}\n"
"\n"
"\n"
"QProgressBar::chunk:disabled {\n"
"    background-color: #333;\n"
"    border: 0px;\n"
"    border-radius: 10px;\n"
"    color: #656565;\n"
"}\n"
"\n"
"\n"
"/*-----QStatusBar-----*/\n"
"QStatusBar\n"
"{\n"
"    background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:1, y2:1, stop:0 rgba(102, 115, 140, 255),stop:1 rgba(56, 63, 77, 255));\n"
"    color: #ffffff;\n"
"    border-color: #051a39;\n"
"    font-weight: bold;\n"
"\n"
"}\n"
"\n"
"")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 20, 527, 871))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout.addItem(spacerItem)
        self.label_5 = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        spacerItem1 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout.addItem(spacerItem1)
        self.btn_sim = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.btn_sim.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.SizeVerCursor))
        self.btn_sim.setObjectName("btn_sim")
        self.verticalLayout.addWidget(self.btn_sim)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem2 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.num_robots = QtWidgets.QSpinBox(parent=self.verticalLayoutWidget)
        self.num_robots.setObjectName("num_robots")
        self.verticalLayout_2.addWidget(self.num_robots)
        self.btn_framework = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.btn_framework.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.SizeVerCursor))
        self.btn_framework.setObjectName("btn_framework")
        self.verticalLayout_2.addWidget(self.btn_framework)
        self.horizontalLayout_4.addLayout(self.verticalLayout_2)
        spacerItem3 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem3)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout_3.addWidget(self.label)
        self.num_cam = QtWidgets.QSpinBox(parent=self.verticalLayoutWidget)
        self.num_cam.setObjectName("num_cam")
        self.verticalLayout_3.addWidget(self.num_cam)
        self.btn_initialize = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.btn_initialize.setObjectName("btn_initialize")
        self.verticalLayout_3.addWidget(self.btn_initialize)
        self.horizontalLayout_4.addLayout(self.verticalLayout_3)
        spacerItem4 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem4)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        spacerItem5 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout.addItem(spacerItem5)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_4 = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_3.addWidget(self.label_4)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        spacerItem6 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout.addItem(spacerItem6)
        self.tabWidget = QtWidgets.QTabWidget(parent=self.verticalLayoutWidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setMaximumSize(QtCore.QSize(16777215, 150))
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.Mobilization = QtWidgets.QWidget()
        self.Mobilization.setObjectName("Mobilization")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.Mobilization)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        spacerItem7 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem7)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_7 = QtWidgets.QLabel(parent=self.Mobilization)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_6.addWidget(self.label_7)
        self.cb_recogida = QtWidgets.QComboBox(parent=self.Mobilization)
        self.cb_recogida.setObjectName("cb_recogida")
        self.verticalLayout_6.addWidget(self.cb_recogida)
        spacerItem8 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout_6.addItem(spacerItem8)
        self.horizontalLayout_8.addLayout(self.verticalLayout_6)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_6 = QtWidgets.QLabel(parent=self.Mobilization)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_4.addWidget(self.label_6)
        self.cb_entrega = QtWidgets.QComboBox(parent=self.Mobilization)
        self.cb_entrega.setObjectName("cb_entrega")
        self.verticalLayout_4.addWidget(self.cb_entrega)
        spacerItem9 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout_4.addItem(spacerItem9)
        self.horizontalLayout_8.addLayout(self.verticalLayout_4)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_8 = QtWidgets.QLabel(parent=self.Mobilization)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_5.addWidget(self.label_8)
        self.cb_robot = QtWidgets.QComboBox(parent=self.Mobilization)
        self.cb_robot.setObjectName("cb_robot")
        self.verticalLayout_5.addWidget(self.cb_robot)
        spacerItem10 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout_5.addItem(spacerItem10)
        self.horizontalLayout_8.addLayout(self.verticalLayout_5)
        spacerItem11 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem11)
        self.horizontalLayout.addLayout(self.horizontalLayout_8)
        self.tabWidget.addTab(self.Mobilization, "")
        self.Goto = QtWidgets.QWidget()
        self.Goto.setObjectName("Goto")
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.Goto)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 491, 146))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem12 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem12)
        self.verticalLayout_20 = QtWidgets.QVBoxLayout()
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.label_17 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.verticalLayout_20.addWidget(self.label_17)
        self.doubleSB_X = QtWidgets.QDoubleSpinBox(parent=self.horizontalLayoutWidget)
        self.doubleSB_X.setObjectName("doubleSB_X")
        self.verticalLayout_20.addWidget(self.doubleSB_X)
        spacerItem13 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout_20.addItem(spacerItem13)
        self.horizontalLayout_5.addLayout(self.verticalLayout_20)
        self.verticalLayout_21 = QtWidgets.QVBoxLayout()
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.label_18 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_18.setFont(font)
        self.label_18.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_18.setObjectName("label_18")
        self.verticalLayout_21.addWidget(self.label_18)
        self.doubleSB_Y = QtWidgets.QDoubleSpinBox(parent=self.horizontalLayoutWidget)
        self.doubleSB_Y.setObjectName("doubleSB_Y")
        self.verticalLayout_21.addWidget(self.doubleSB_Y)
        spacerItem14 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout_21.addItem(spacerItem14)
        self.horizontalLayout_5.addLayout(self.verticalLayout_21)
        self.verticalLayout_19 = QtWidgets.QVBoxLayout()
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.label_16 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_16.setObjectName("label_16")
        self.verticalLayout_19.addWidget(self.label_16)
        self.cb_robot_4 = QtWidgets.QComboBox(parent=self.horizontalLayoutWidget)
        self.cb_robot_4.setObjectName("cb_robot_4")
        self.verticalLayout_19.addWidget(self.cb_robot_4)
        spacerItem15 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout_19.addItem(spacerItem15)
        self.horizontalLayout_5.addLayout(self.verticalLayout_19)
        spacerItem16 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem16)
        self.tabWidget.addTab(self.Goto, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.btn_nav = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.btn_nav.setObjectName("btn_nav")
        self.verticalLayout.addWidget(self.btn_nav)
        self.btn_home = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.btn_home.setObjectName("btn_home")
        self.verticalLayout.addWidget(self.btn_home)
        spacerItem17 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout.addItem(spacerItem17)
        self.image_label = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.image_label.sizePolicy().hasHeightForWidth())
        self.image_label.setSizePolicy(sizePolicy)
        self.image_label.setMinimumSize(QtCore.QSize(400, 0))
        self.image_label.setText("")
        self.image_label.setObjectName("image_label")
        self.verticalLayout.addWidget(self.image_label)
        spacerItem18 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.verticalLayout.addItem(spacerItem18)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_12 = QtWidgets.QLabel(parent=self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_7.addWidget(self.label_12)
        self.cb_camera = QtWidgets.QComboBox(parent=self.verticalLayoutWidget)
        self.cb_camera.setObjectName("cb_camera")
        self.horizontalLayout_7.addWidget(self.cb_camera)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        # Connect button signals to corresponding slots
        self.btn_sim.clicked.connect(self.on_btn_sim_clicked)
        self.btn_framework.clicked.connect(self.on_btn_framework_clicked)
        self.btn_nav.clicked.connect(self.on_btn_nav_clicked)
        self.btn_initialize.clicked.connect(self.on_btn_initialize_clicked)
        
        MainWindow.closeEvent = self.on_window_closed
        # Create variables to hold the process objects
        self.sim_process = None
        self.framework_process = None
        self.nav_process = None
        self.gui = gui
        self.running_flag = False

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_5.setText(_translate("MainWindow", "Framework MultiRobot"))
        self.btn_sim.setText(_translate("MainWindow", "Simulate"))
        self.label_3.setText(_translate("MainWindow", "Number of robots:"))
        self.btn_framework.setText(_translate("MainWindow", "Framework"))
        self.label.setText(_translate("MainWindow", "Number of cameras:"))
        self.btn_initialize.setText(_translate("MainWindow", "Initialize"))
        self.label_4.setText(_translate("MainWindow", "Task Allocation"))
        self.label_7.setText(_translate("MainWindow", "Pickup"))
        self.label_6.setText(_translate("MainWindow", "Delivery"))
        self.label_8.setText(_translate("MainWindow", "Robot"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Mobilization), _translate("MainWindow", "Mobilization"))
        self.label_17.setText(_translate("MainWindow", "x"))
        self.label_18.setText(_translate("MainWindow", "y"))
        self.label_16.setText(_translate("MainWindow", "Robot"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Goto), _translate("MainWindow", "Go to"))
        self.btn_nav.setText(_translate("MainWindow", "Navegar"))
        self.btn_home.setText(_translate("MainWindow", "Home"))
        self.label_12.setText(_translate("MainWindow", "Camera:"))
        
    def update_combo_boxes(self):
        # Clear existing items from the combo boxes
        self.cb_recogida.clear()
        self.cb_entrega.clear()
        self.cb_robot.clear()

        # Add workspaces markers (IDs < 10) to cb_recogida and cb_entrega
        self.cb_recogida.addItems([str(marker_id) for marker_id in self.gui.workspaces])
        self.cb_entrega.addItems([str(marker_id) for marker_id in self.gui.workspaces])

        # Add robot markers (IDs >= 10) to cb_robot
        self.cb_robot.addItems(['any'])
        self.cb_robot.addItems([str((marker_id-9)) for marker_id in self.gui.robots])
    def update_image_label(self, pixmap):
        # Resize the pixmap to fit the image_label
        label_size = self.image_label.size()
        pixmap = pixmap.scaled(label_size, QtCore.Qt.AspectRatioMode.KeepAspectRatio)

        self.image_label.setPixmap(pixmap)

    
    # Slot for the "Simular" button
    def on_btn_sim_clicked(self):
        # Run the ROS2 launch file for simulation in a separate thread
        sim_thread = threading.Thread(target=self.launch_simulation)
        sim_thread.daemon = True  # Set the thread as a daemon thread
        sim_thread.start()

    def launch_simulation(self):
        # Use subprocess.Popen to launch the ROS2 launch process and store the process object
        self.sim_process = subprocess.Popen(["ros2", "launch", "ramel", "ramel_mrs_sim.launch.py"], preexec_fn=os.setsid)
        
    # Slot for the "Initialize" button
    def on_btn_initialize_clicked(self):
        current_path = os.getcwd()
        scripts_path = os.path.join(current_path, 'scripts')
        script_path = os.path.join(scripts_path, 'initial_pose_publisher.py')
        num_robots = self.num_robots.value()
        command = ["python3", script_path, str(num_robots)]

        try:
            subprocess.run(command, check=True)
        except subprocess.CalledProcessError:
            print("Error running the script.")


    # Slot for the "Framework" button
    def on_btn_framework_clicked(self):
        # Get the selected number of robots and cameras from the spin boxes
        num_robots = self.num_robots.value()
        num_cameras = self.num_cam.value()

        # Run the ROS2 launch file for the framework with arguments in a separate thread
        framework_thread = threading.Thread(target=self.launch_framework, args=(num_robots, num_cameras))
        framework_thread.daemon = True  # Set the thread as a daemon thread
        framework_thread.start()

    def launch_framework(self, num_robots, num_cameras):
        # Use subprocess.Popen to launch the ROS2 launch process and store the process object
        self.framework_process = subprocess.Popen(["ros2", "launch", "ramel", "MRS.launch.py",
                                                   "n:={}".format(num_robots),
                                                   #"num_cam:={}".format(num_cameras)
                                                   ], preexec_fn=os.setsid)

    def on_btn_nav_clicked(self):
        # Get the selected values from the combo boxes
        recogida = self.cb_recogida.currentText()
        entrega = self.cb_entrega.currentText()
        robot = self.cb_robot.currentText()
        num_robots = self.num_robots.value()

        if not self.running_flag:
            # Start a separate thread to handle subprocess communication
            nav_thread = threading.Thread(target=self.execute_navigate, args=(recogida, entrega, robot, num_robots))
            nav_thread.daemon = True  # Set the thread as a daemon thread
            nav_thread.start()
            self.running_flag = True
        else:
            # Send the command to the existing subprocess
            input_data = f"{recogida} {entrega}\n"
            self.nav_process.stdin.write(input_data.encode("utf-8"))
            self.nav_process.stdin.flush()

    def execute_navigate(self, recogida, entrega, robot, num_robots):
        current_path = os.getcwd()
        scripts_path = os.path.join(current_path, 'scripts')

        # Start the subprocess only once
        self.nav_process = subprocess.Popen(["python3", "mrs_manager.py", str(num_robots)],
                                            cwd=scripts_path,
                                            stdin=subprocess.PIPE,
                                            stdout=subprocess.PIPE,
                                            stderr=subprocess.PIPE,
                                            shell=False)

        # Send the initial command to the subprocess
        input_data = f"{recogida} {entrega}\n"
        self.nav_process.stdin.write(input_data.encode("utf-8"))
        self.nav_process.stdin.flush()
        
       # if robot == 'any':
            # If robot is empty, execute the navigation with only recogida and entrega parameters
        #    self.nav_process = subprocess.Popen(["python3", "navigator_client.py", recogida, entrega],cwd=scripts_path)
        #else:
            # If robot is not empty, execute the navigation with all parameters
          #  self.nav_process = subprocess.Popen(["python3", "navigator_client.py", recogida, entrega, robot],
           # preexec_fn=os.setsid,cwd=scripts_path)
    
    
    # Function to be called when the window is closed
    def on_window_closed(self, event):
        # Terminate the ROS2 launch processes by sending the Ctrl+C signal
        if self.sim_process:
            os.killpg(os.getpgid(self.sim_process.pid), signal.SIGINT)

        if self.framework_process:
            os.killpg(os.getpgid(self.framework_process.pid), signal.SIGINT)

        if self.nav_process:
            os.killpg(os.getpgid(self.nav_process.pid), signal.SIGINT)

        # Stop the running threads
        if hasattr(self, 'sim_thread') and self.sim_thread.is_alive():
            self.sim_thread.join()

        if hasattr(self, 'framework_thread') and self.framework_thread.is_alive():
            self.framework_thread.join()

        if hasattr(self, 'nav_thread') and self.nav_thread.is_alive():
            self.nav_thread.join()

        # Continue with the default close event handling
        event.accept()

if __name__ == "__main__":
    import sys

    rclpy.init(args=sys.argv)
    gui = GUI()

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow, gui)
    
    MainWindow.show()

    # Start the ROS 2 node in a separate thread
    def ros_thread():
        rclpy.spin(gui)

    ros_thread = threading.Thread(target=ros_thread)
    ros_thread.daemon = True  # Set the thread as a daemon thread
    ros_thread.start()

    sys.exit(app.exec())

    # When the application is closed, clean up the ROS 2 node
    gui.destroy_node()
    rclpy.shutdown()
